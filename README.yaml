#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: terraform-aws-backup

# Tags of this project
tags:
  - aws
  - terraform
  - terraform-modules
  - efs
  - nfs
  - terraform-modules
  - backup
  - backups
  - aws-dynamodb
  - aws-efs
  - efs-backup
  - efs-volume
  - dynamodb
  - dynamodb-backup
  - rds
  - rds-database
  - rds-backup
  - ebs
  - ebs-backup
  - ebs-volumes

# Categories of this project
categories:
  - terraform-modules/networking

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"
# Canonical GitHub repo
github_repo: cloudposse/terraform-aws-backup
# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/terraform-aws-backup.svg"
    url: "https://github.com/cloudposse/terraform-aws-backup/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"
related:
  - name: "terraform-aws-efs"
    description: "Terraform module to provision EFS file system"
    url: "https://github.com/cloudposse/terraform-aws-efs"
  - name: "terraform-aws-efs-backup"
    description: "Terraform module to backup EFS filesystems to S3 using DataPipeline"
    url: "https://github.com/cloudposse/terraform-aws-efs-backup"
  - name: "terraform-aws-efs-cloudwatch-sns-alarms"
    description: "Terraform module that configures CloudWatch SNS alerts for EFS"
    url: "https://github.com/cloudposse/terraform-aws-efs-cloudwatch-sns-alarms"

# Short description of this project
description: |-
  Terraform module to provision [AWS Backup](https://aws.amazon.com/backup), a fully managed backup service that makes it easy to centralize and automate
  the back up of data across AWS services such as Amazon EBS volumes, Amazon EC2 instances, Amazon RDS databases, Amazon DynamoDB tables,
  Amazon EFS file systems, and AWS Storage Gateway volumes.

  **NOTE**: the syntax of declaring a backup schedule has changed as of release 0.14.0, follow the instructions in the [0.13.x to 0.14.x+ migration guide](./docs/migration-0.13.x-0.14.x+.md).

# How to use this project
usage: |2-

  For a complete example on how to backup an Elastic File System (EFS), see [examples/complete](examples/complete).

  For automated tests of the complete example using [bats](https://github.com/bats-core/bats-core) and [Terratest](https://github.com/gruntwork-io/terratest)
  (which tests and deploys the example on AWS), see [`test`](test).

  ```hcl
  provider "aws" {
    region = var.region
  }

  module "vpc" {
    source = "cloudposse/vpc/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    namespace  = var.namespace
    stage      = var.stage
    name       = var.name
    attributes = var.attributes
    tags       = var.tags
    delimiter  = var.delimiter

    ipv4_primary_cidr_block = "172.16.0.0/16"
  }

  module "subnets" {
    source = "cloudposse/dynamic-subnets/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    namespace  = var.namespace
    stage      = var.stage
    name       = var.name
    attributes = var.attributes
    tags       = var.tags
    delimiter  = var.delimiter

    availability_zones   = var.availability_zones
    vpc_id               = module.vpc.vpc_id
    igw_id               = [module.vpc.igw_id]
    ipv4_cidr_block      = module.vpc.vpc_cidr_block
    nat_gateway_enabled  = false
    nat_instance_enabled = false
  }

  module "efs" {
    source = "cloudposse/efs/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    namespace  = var.namespace
    stage      = var.stage
    name       = var.name
    attributes = var.attributes
    tags       = var.tags
    delimiter  = var.delimiter

    region             = var.region
    availability_zones = var.availability_zones
    vpc_id             = module.vpc.vpc_id
    subnets            = module.subnets.private_subnet_ids

    allowed_security_group_ids = [module.vpc.vpc_default_security_group_id]
  }

  module "backup" {
    source = "cloudposse/backup/aws"
    # Cloud Posse recommends pinning every module to a specific version
    # version     = "x.x.x"

    namespace  = var.namespace
    stage      = var.stage
    name       = var.name
    attributes = var.attributes
    tags       = var.tags
    delimiter  = var.delimiter

    backup_resources = [module.efs.arn]
    not_resources    = var.not_resources
    rules = [
      {
        name               = var.name
        schedule           = var.schedule
        start_window       = var.start_window
        completion_window  = var.completion_window
        cold_storage_after = var.cold_storage_after
        delete_after       = var.delete_after
      },
    ]
  }
  ```

include:
  - "docs/targets.md"
  - "docs/terraform.md"

# Contributors to this project
contributors:
  - name: "Erik Osterman"
    homepage: "https://github.com/osterman"
    github: "osterman"
  - name: "Andriy Knysh"
    homepage: "https://github.com/aknysh/"
    github: "aknysh"
  - name: "Igor Rodionov"
    homepage: "https://github.com/goruha/"
    github: "goruha"
  - name: "RB"
    homepage: "https://github.com/nitrocode/"
    github: "nitrocode"
